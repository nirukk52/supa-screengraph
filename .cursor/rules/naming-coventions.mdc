---
description: 
globs: 
alwaysApply: true
---
This rule describes what naming conventions to use for files, folders, components and methods.

## Files & Folders
- Directories: `lowercase-with-dashes` (e.g., `auth-wizard`)
- Files: PascalCase for components (e.g., `Button.tsx`); camelCase for utilities
- File name = first class/function name
- Favor named exports for components

## Code Elements
- Types/Interfaces: `PascalCase` (e.g., `UserProfile`)
- Functions: `camelCase` with verb (e.g., `fetchUserData`, `startWorker`)
- Variables: `camelCase` with auxiliary verbs (e.g., `isLoading`, `hasError`)
- Constants: `SCREAMING_SNAKE_CASE` for exported (e.g., `EVENT_TYPES`)

## Layer-Aware Naming
- Domain: plain nouns (e.g., `User`, `Order`)
- Application: `*UseCase` suffix (e.g., `CreateUserUseCase`)
- Infra: `*Repo`, `*Adapter`, `*Worker` suffixes (e.g., `UserRepository`)

## No Magic Strings
- Use const objects + unions instead of TS enums
- Export VALUE arrays for Zod schemas (e.g., `EVENT_TYPE_VALUES`)
- All string literals come from centralized constants

## Domain Vocabulary
- Use business terminology (e.g., `AgentRunTracer` not `FeatureLayerTracer`)
- Function names describe intent clearly (e.g., `publishPendingOutboxEventsOnce`)

- Persona gate: ensure `@persona-ian-botts-cto.json` is attached before proceeding.