#!/bin/sh

# Fast pr:check before push
if [ "$SKIP_PR_CHECK" != "1" ]; then
  echo "🔍 Running fast pr:check before push..."
  SKIP_E2E=1 SKIP_COVERAGE=1 pnpm run pr:check || {
    echo "❌ pr:check failed. Fix issues or use SKIP_PR_CHECK=1 to bypass."
    exit 1
  }
fi

# Optional skip
if [ "$SKIP_TESTS" = "1" ]; then
  echo "SKIP_TESTS=1 set; skipping tests"
else
  # Check for active bug work requiring pre-push validation
  if grep -q "BUG-TEST-004.*In Progress" docs/jira/bug-logs/BUG-TEST-004.md 2>/dev/null; then
    echo "⚠️  BUG-TEST-004 (Skipped Integration Tests) in progress: Ensure pre-push checklist complete before pushing code"
    echo "See docs/jira/bug-logs/BUG-TEST-004.md for checklist"
    # Allow push to continue but warn
  fi

  # Determine affected tests (fallback to full suite)
  patterns="$(node tooling/scripts/test/affected.ts 2>/dev/null || echo '')"
  if [ -z "$patterns" ] || [ "$patterns" = "NO_AFFECTED" ]; then
    echo "Running full unit test suite (no affected tests detected)"
    pnpm -w vitest run --reporter=dot || exit 1
  else
    echo "Running affected tests:"
    echo "$patterns"
    pnpm -w vitest run --reporter=dot -- $(echo "$patterns" | tr '\n' ' ') || exit 1
  fi
fi

# Enforce Claude update trailer and docs rule
last_msg="$(git log -1 --pretty=%B)"
case "$last_msg" in
  *"Claude-Update: yes"*)
    if ! git show --name-only --pretty="" HEAD | grep -E "^(CLAUDE/|CLAUDE.md)" >/dev/null; then
      echo "Claude-Update: yes but no CLAUDE docs changed in last commit" >&2
      exit 1
    fi
    ;;
  *"Claude-Update: no"*)
    ;;
  *)
    echo "Missing required commit trailer: 'Claude-Update: yes|no'" >&2
    exit 1
    ;;
esac
