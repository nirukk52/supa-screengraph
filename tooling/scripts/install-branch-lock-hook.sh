#!/usr/bin/env bash
set -euo pipefail

# install-branch-lock-hook.sh
# Purpose: Install a per-worktree post-checkout hook that pins the current worktree to a target branch.
# Usage: ./tooling/scripts/install-branch-lock-hook.sh --branch <branch-name>

TARGET_BRANCH=""

while [[ $# -gt 0 ]]; do
  case "$1" in
    --branch)
      TARGET_BRANCH="${2:-}"
      shift 2
      ;;
    *)
      echo "Unknown argument: $1" >&2
      exit 1
      ;;
  esac
done

if [[ -z "$TARGET_BRANCH" ]]; then
  echo "Error: --branch <branch-name> is required" >&2
  exit 1
fi

# Resolve paths
WORKTREE_GIT_DIR=$(git rev-parse --git-dir)
REPO_ROOT=$(git rev-parse --show-toplevel)
HOOKS_DIR="$WORKTREE_GIT_DIR/hooks"

mkdir -p "$HOOKS_DIR"

cat > "$HOOKS_DIR/post-checkout" << EOF
#!/bin/sh
# Auto-generated by install-branch-lock-hook.sh
# Locks this worktree to the '$TARGET_BRANCH' branch

current=\$(git symbolic-ref --short HEAD 2>/dev/null)
if [ "\$current" = "$TARGET_BRANCH" ]; then
  exit 0
fi

echo "" 1>&2
echo "❌ This worktree is locked to '$TARGET_BRANCH'." 1>&2
echo "Reverting checkout back to '$TARGET_BRANCH'..." 1>&2
git checkout -q "$TARGET_BRANCH"
exit 1
EOF

chmod +x "$HOOKS_DIR/post-checkout"

# Enable worktree-specific config and point hooksPath to this worktree's hooks dir
git -C "$REPO_ROOT" config extensions.worktreeConfig true
git config --worktree core.hooksPath "$HOOKS_DIR"

echo "Installed post-checkout hook for worktree:"
echo " - Target branch: $TARGET_BRANCH"
echo " - Hooks dir: $HOOKS_DIR"

