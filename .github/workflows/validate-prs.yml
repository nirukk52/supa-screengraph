name: validate-prs

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: read

jobs:
  unified-pr-check:
    name: Unified PR Checks
    runs-on: ubuntu-latest
    timeout-minutes: 60
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test -d test" \
          --health-interval 5s \
          --health-timeout 5s \
          --health-retries 20
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Playwright browsers and system deps
        run: pnpm --filter @repo/web exec playwright install --with-deps

      - name: Run PR Checks (local/CI parity)
        run: node tooling/scripts/pr-check.mjs
        env:
          DATABASE_URL: "postgresql://test:test@localhost:5432/test"
          BETTER_AUTH_SECRET: "test-secret-for-ci-only"
          NEXT_PUBLIC_SITE_URL: "http://localhost:3000"
          GITHUB_CLIENT_ID: "test-github-client-id"
          GITHUB_CLIENT_SECRET: "test-github-client-secret"
          GOOGLE_CLIENT_ID: "test-google-client-id"
          GOOGLE_CLIENT_SECRET: "test-google-client-secret"

      - name: Upload Playwright report
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30
