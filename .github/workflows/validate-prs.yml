name: Validate PRs

on:
  push:
    branches: [main, feat/*, feature/*, fix/*, chore/*]

permissions:
  contents: write
  pull-requests: write

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://test:test@localhost:5432/test' }}
  BETTER_AUTH_SECRET: "test-secret-for-ci-only"
  NEXT_PUBLIC_SITE_URL: "http://localhost:3000"
  GITHUB_CLIENT_ID: "test-github-client-id"
  GITHUB_CLIENT_SECRET: "test-github-client-secret"
  GOOGLE_CLIENT_ID: "test-google-client-id"
  GOOGLE_CLIENT_SECRET: "test-google-client-secret"

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          # Ensure we check out the source branch, not the merge commit
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
          persist-credentials: true
      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest
      - name: Apply Biome fixes
        run: biome check . --write
      - name: Commit and push fixes (same-repo PRs only)
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "chore(ci): apply biome autofix"
            git push
          fi
      - name: Verify Biome (no changes pending)
        run: biome ci .
  unit:
    name: Unit tests (Vitest + coverage)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: pnpm/action-setup@v4
      - name: Install deps
        run: pnpm install
      - name: Generate DB types
        run: pnpm --filter database generate
      - name: Run unit tests with coverage (70% gates)
        run: pnpm -w vitest run --coverage --reporter=dot
  e2e:
    name: Run e2e tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: pnpm/action-setup@v4
      - name: Install dependencies
        run: pnpm install && pnpm --filter database generate
      - name: Run Playwright tests
        run: pnpm --filter web e2e:ci
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30
